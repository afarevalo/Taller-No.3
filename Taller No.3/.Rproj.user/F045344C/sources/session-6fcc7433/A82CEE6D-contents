## Eduard F Martinez-Gonzalez
## R version 4.2.2 (2022-10-31)

## initial configuration
if (!require("pacman")) install.packages("pacman") # Isntalar pacman (sino está instalada)
require(pacman) # llamar pacman

## llamar y/o instalar librerias
p_load(tidyverse,rio,
       viridis, ## paletas de colores 
       sf, ## datos espaciales
       leaflet, ## visualizaciones
       tmaptools, ## geocodificar
       ggsn, ## map scale bar 
       tidycensus) ## packages with census data

##====================================##
## [1.] Modelo de equilibrio espacial ##
##====================================##

## get access to the Census API
browseURL("http://api.census.gov/data/key_signup.html")

## API-key US Census Bureau data
#census_api_key("YOUR CENSUS API HERE") 

## help tidycensus
browseURL("https://walker-data.com/tidycensus/articles/basic-usage.html")

## get Median Housing Values Cook county
chicago = get_acs(geography="block group" , variables = "B25077_001E" , state="IL" , county="Cook County" , year=2021 , geometry = T)
class(chicago)

## get Median Housing Values Suffolk County
boston = get_acs(geography="block group",variables="B25077_001E",state ="MA",county="Suffolk County",year=2021,geometry = T)

## plot data
leaflet() %>% addTiles() %>% addPolygons(data = boston , color="red" , label =  boston$estimate)
leaflet(boston) %>% addTiles() %>% addPolygons(color="green",fill=NA,weight=2)

## Boston CBD
uniandes <- geocode_OSM("Universidad de los Andes" , as.sf = T)
leaflet() %>% addTiles() %>% addCircles(data=uniandes , color="red")

boston_cbd = geocode_OSM("Carmen Park, Boston", as.sf=T) 

leaflet() %>% addTiles() %>% addCircleMarkers(data=boston_cbd,col="red",weight=3)

## Chicago CBD
chicago_cbd = geocode_OSM("233 S Wacker Dr, Chicago, IL 60606, Estados Unidos", as.sf=T) ## Willis Tower

leaflet() %>% addTiles() %>% addCircleMarkers(data=chicago_cbd,col="red",weight=3)

## create distances Boston
boston_cbd = boston_cbd %>% st_transform(st_crs(boston)) ## change CRS

boston$dist_CBD = st_distance(boston,boston_cbd) 

boston$dist_CBD = as.numeric(boston$dist_CBD)*0.000621371

## create distances Chicago
chicago_cbd = chicago_cbd %>% st_transform(st_crs(chicago)) ## change CRS

chicago$dist_CBD = st_distance(chicago,chicago_cbd) 

chicago$dist_CBD = as.numeric(chicago$dist_CBD)*0.000621371

## prepare data
boston$City="Boston" ## create name city

chicago$City="Chicago" ## create name city

chicago=chicago %>% filter(dist_CBD<=10) ## keep block groups in Cook County that are within 10 miles of the city center
st_geometry(chicago) = NULL
st_geometry(boston) = NULL

dta = rbind(chicago,boston) # stack data

## scaterplot
ggplot(data=dta , aes(x=dist_CBD , y=estimate , color=as.factor(City))) +
geom_point() + geom_smooth(method = "lm")


ggplot(dta, aes(x=dist_CBD, y=estimate, color=City)) +
geom_point(shape=1) + geom_smooth(method="lm") + xlab("Distance to CBD (miles)") +
ylab("Median Housing Prices ($)") + theme_test()
ggsave("output/figure_2.1.pdf")

##==========================##
## [2.] Aplicacion a Bogota ##
##==========================##

## import data
bog = import("C:/Users/windows/Downloads/Curso/clase-02-main-clase_02/clase-02-main-clase_02/clase_02/input/block_median_housing_value_bog.rds")

library(sf)
library(ggplot2)

# Importar datos
bog <- readRDS("input/block_median_housing_value_bog.rds")

# Convertir a objeto sf si no lo es
if (!inherits(bog, "sf")) {
  bog <- st_as_sf(bog)
}

# Asegurarse de que la columna de geometría está correctamente identificada
st_geometry(bog) <- bog$geometry

# Plotear el mapa
p <- ggplot(data = bog) +
  geom_sf(mapping = aes(fill = q_price), size = 0.3, col = NA) +
  scale_fill_manual(values = c("yellow", "#FF9900", "#FF6600", "#CC0000", "#990000"),
                    name = "Valor mediano\n del metro cuadrado") +
  theme_minimal()

# Mostrar el gráfico
print(p)

##=== plot map ===##
p = ggplot(data=bog) + geom_sf(mapping = aes(fill=q_price) , size=0.3 , col=NA)  +
    scale_fill_manual(values=c("yellow","#FF9900","#FF6600","#CC0000","#990000"),
                      name="Valor mediano\n del metro cuadrado") 
p

## add theme and labels
p = p + theme_bw() + labs(x="",y="")
p 

## add scalebar and north symbol
p = p + north(data=bog , location="topleft") + 
    scalebar(data=bog , dist=5 , dist_unit="km" , transform=T , model="WGS84")
p

## save plot
ggsave(plot=p , filename="output/bog_price_block.pdf" , width=6.5 , height=8)

##=== plot distances ===##

## plot 
ggplot(bog, aes(x=dist_CBD/1000, y=price_surface_median/1000000)) +
geom_point(shape=1) + geom_smooth(method="lm") + 
theme_bw() + labs(x="Distancía al centro de negocios de la ciudad (kilómetros)",
                  y="Valor mediano del metro cuadrado (millones)")

## save plot
ggsave(filename="output/bog_dist_cbd.png" , width=6.5 , height=7)

